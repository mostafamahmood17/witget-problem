[{"/Users/mostafamahmood/Documents/web-project/task/widget/src/index.js":"1","/Users/mostafamahmood/Documents/web-project/task/widget/src/App.js":"2","/Users/mostafamahmood/Documents/web-project/task/widget/src/reportWebVitals.js":"3","/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/FrontPage.js":"4","/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/SecondPage.js":"5","/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/ThirdPage.js":"6","/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/FourthPage.js":"7","/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/Buyfinal.js":"8","/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/SellFrontPage.js":"9","/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/Navbar.js":"10","/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/SellSecondPage.js":"11","/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/SellThirdPage.js":"12"},{"size":509,"mtime":1611629675373,"results":"13","hashOfConfig":"14"},{"size":2035,"mtime":1611680083367,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611606514640,"results":"16","hashOfConfig":"14"},{"size":1682,"mtime":1611676541219,"results":"17","hashOfConfig":"14"},{"size":1521,"mtime":1611679581323,"results":"18","hashOfConfig":"14"},{"size":1290,"mtime":1611639890221,"results":"19","hashOfConfig":"14"},{"size":1782,"mtime":1611647220197,"results":"20","hashOfConfig":"14"},{"size":195,"mtime":1611640448726,"results":"21","hashOfConfig":"14"},{"size":1268,"mtime":1611676622949,"results":"22","hashOfConfig":"14"},{"size":631,"mtime":1611676314708,"results":"23","hashOfConfig":"14"},{"size":1564,"mtime":1611680072655,"results":"24","hashOfConfig":"14"},{"size":171,"mtime":1611676979895,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"707xe5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/mostafamahmood/Documents/web-project/task/widget/src/index.js",[],["56","57"],"/Users/mostafamahmood/Documents/web-project/task/widget/src/App.js",["58"],"/Users/mostafamahmood/Documents/web-project/task/widget/src/reportWebVitals.js",[],"/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/FrontPage.js",["59"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../App';\nimport './FrontPage.css'\n\nconst FrontPage = () => {\n    const { country, setCountry, quantity, setQuantity } = useContext(UserContext);\n    const [currency, setCurrency] = useState([]);\n    \n\n    useEffect(() => {\n        fetch(\"https://restcountries.eu/rest/v2/all\")\n            .then((res) => res.json())\n            .then((data) => setCurrency(data));\n    }, [country]);\n\n    const handleChange = (e) => {\n        setCountry(e.target.value);\n    };\n    const handleNumber = (e) => {\n        setQuantity(e.target.value);\n    };\n   \n\n    return (\n        <div>\n            <div className=\"box\">\n                <h4>Stablecoin gateway - Buy</h4>\n              \n                    <select  onChange={handleChange}  className=\"w-75\" name=\"coin\" id=\"coin\" >\n                        <option>Select Country</option>\n                        {currency.map(currencies => (\n                            <option key={currencies.name}>\n                                {currencies.name} - ( {currencies.currencies[0].code})\n                            </option>\n                        ))}\n\n                    </select>\n                    <br />\n                    <input className=\"w-75\" type=\"number\" onBlur={handleNumber} placeholder=\"Quantity\" />\n                    <h3>Total cost @price AOA/TAOA</h3>\n                    <Link to=\"/secondPage\">\n                    <input className=\"nextButton\" type=\"submit\" value=\"Next\" />\n                    </Link>\n\n               \n\n            </div>\n\n        </div>\n    );\n};\n\nexport default FrontPage;","/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/SecondPage.js",["60","61"],"import React , { useContext, useState }  from 'react';\nimport \"./SecondPage.css\"\nimport WAValidator from \"wallet-address-validator\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from '../App';\n\n\nconst SecondPage = () => {\n    const { wallet, setWallet } = useContext(UserContext);\n    const [inWallet ='1KFzzGtDdnq5hrwxXGjwVnKzRbvf8WVxck', setInWallet] = useState(\"\");\n\n   \n\n\n\n    let history = useHistory();\n\n  const validWallet = () => {\n    const valid = WAValidator.validate(inWallet , \"BTC\");\n    console.log(valid)\n    if (valid) {\n      history.push(\"/thirdPage\");\n      setWallet(inWallet);\n    } else {\n      alert(\"Address INVALID\");\n    }\n  };\n\n    return (\n        <div className=\"box\">\n            {/* <form action=\"\"> */}\n                <h3>Setup 2/4</h3>\n                <input onBlur={(e)=>setInWallet(e.target.value)} type=\"text\" placeholder=\"Enter your BSC wallet address\"></input>\n                <br />\n                <h3>You will receive your TAOA in this address</h3>\n                <br />\n                <h3>Pay close attention mistakes will make you loose all your assets and there is nothing we can do to help</h3>\n                <a className=\"anchor\" text-align=\"center\" href=\"https://www.binance.org/en/smartChain\" target=\"_blank\" >Don't have a BC wallet yet?</a>\n                <br/>\n                <input onClick={validWallet} className=\"nextButton\" type=\"submit\" value=\"Next\"/>\n            {/* </form> */}\n\n        </div>\n    );\n};\n\nexport default SecondPage;","/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/ThirdPage.js",["62","63"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ThirdPage = () => {\n\n    const [selectBank, setSelectBank] = useState(\"Chose Your Bank\");\n\n    const handleChange = (e) => {\n          setSelectBank(e);\n    };\n    return (\n        <div className=\"box\">\n            <form >\n                <h3>STEP 3/4</h3>\n                <select onSelect={handleChange} name=\"bank\" id=\"bank\">\n                    <option value=\"Private Bank\">Private Bank</option>\n                    <option value=\"Public Bank\">Public Bank</option>\n                    <option value=\"Our Bank\">Our Bank</option>\n                    <option value=\"Rural Bank\">Rural Bank</option>\n                </select>\n                <br />\n                <h3>Transfers between banks are usually faster. If available give preference to your local Bank and the system will automaticlly find the best P2P for you.</h3>\n                <br />\n                <br />\n                \n                <a className=\"anchor\" href=\"#\">How long does it usually take?</a>\n                <br/>\n                <Link to=\"/fourthPage\">\n                <input className=\"nextButton\" type=\"submit\" value=\"Next\"/>\n                </Link>\n            </form>\n        </div>\n    );\n};\n\nexport default ThirdPage;","/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/FourthPage.js",["64","65","66","67","68","69","70"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useId } from \"react-id-generator\";\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from '../App';\n\n\nconst FourthPage = () => {\n    const history = useHistory();\n    const [value, setValue] = useState(\"\");\n    const { country, setCountry,  wallet , setWallet, quantity, setQuantity } = useContext(UserContext);\n   \n\n    const [htmlId] = useId();\n    const IBAN = 'ABCDEFG1234567'\n    \n\n   const handleSubmit = ()=>{\n       const totalValue = { country, quantity, wallet, htmlId, IBAN };\n       console.log(totalValue)\n        fetch(\"http://localhost:5000/buy\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                  },\n                  body: JSON.stringify(totalValue),\n                 \n                })\n                .then(response => response.json())\n                .then(data => console.log(data))\n                history.replace(\"/buyFinal\")\n\n    }\n    \n    \n\n    return (\n\n        <div className=\"box\">\n            <form action=\"\" onSubmit={handleSubmit}>\n                <h3>Step 4/4</h3>\n                <br />\n                <h3>Transfer funds to the following account</h3>\n                <br />\n                <h3>IBAN: {IBAN}</h3>\n                <h3>Swap Id : {htmlId}</h3>\n                <br />\n                <h3>As soon as the funds are received the transaction to your BSC wallet will be mode the following address</h3>\n                <h3>{wallet}</h3>\n                <a href=\"#\"> Doubts?Discord or Telegram</a>\n                <br/>\n                <input type=\"submit\" value=\"Next\" />\n            </form>\n\n        </div>\n    );\n};\n\nexport default FourthPage;","/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/Buyfinal.js",[],"/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/SellFrontPage.js",["71","72","73","74"],"import React, { useContext, useState } from 'react';\nimport randomToken from 'random-token';\nimport { UserContext } from '../App';\nimport { Link } from 'react-router-dom';\n\n\nconst SellFrontPage = () => {\n    const { newToken, setNewToken, sellQuantity, setSellQuantity } = useContext(UserContext);\n    const randomToken = require('random-token').create('abcdefghijklmnopqrstuvwxzyABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789');\n    var token = randomToken(16);\n\n    const handleToken = (e) => {\n        setNewToken(e.target.value)\n    }\n    const handleNumber = (e) => {\n        setSellQuantity(e.target.value);\n    };\n\n    return (\n        <div className=\"box\">\n            <h3>Stablecoin gateway - Sell</h3>\n            <select onChange={handleToken} name=\"token\" id=\"\">\n                <option value=\"\">Select token</option>\n                <option value=\"token\">{token}</option>\n            </select>\n            <br />\n            <input className=\"w-75\" type=\"number\" onBlur={handleNumber} placeholder=\"Quantity\" />\n            <h3>You will get X AOA @preco TAOA/AOA</h3>\n            <Link to=\"/sellSecondPage\">\n                <input className=\"nextButton\" type=\"submit\" value=\"Sell now\" />\n            </Link>\n\n\n\n        </div>\n    );\n};\n\nexport default SellFrontPage;","/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/Navbar.js",[],"/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/SellSecondPage.js",["75","76"],"/Users/mostafamahmood/Documents/web-project/task/widget/src/Componants/SellThirdPage.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":7,"column":50,"nodeType":"83","messageId":"84","endLine":7,"endColumn":54},{"ruleId":"81","severity":1,"message":"85","line":7,"column":34,"nodeType":"83","messageId":"84","endLine":7,"endColumn":42},{"ruleId":"81","severity":1,"message":"86","line":9,"column":13,"nodeType":"83","messageId":"84","endLine":9,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":38,"column":17,"nodeType":"89","endLine":38,"endColumn":121},{"ruleId":"81","severity":1,"message":"90","line":6,"column":12,"nodeType":"83","messageId":"84","endLine":6,"endColumn":22},{"ruleId":"91","severity":1,"message":"92","line":26,"column":17,"nodeType":"89","endLine":26,"endColumn":48},{"ruleId":"81","severity":1,"message":"93","line":1,"column":29,"nodeType":"83","messageId":"84","endLine":1,"endColumn":38},{"ruleId":"81","severity":1,"message":"94","line":9,"column":12,"nodeType":"83","messageId":"84","endLine":9,"endColumn":17},{"ruleId":"81","severity":1,"message":"95","line":9,"column":19,"nodeType":"83","messageId":"84","endLine":9,"endColumn":27},{"ruleId":"81","severity":1,"message":"96","line":10,"column":22,"nodeType":"83","messageId":"84","endLine":10,"endColumn":32},{"ruleId":"81","severity":1,"message":"97","line":10,"column":44,"nodeType":"83","messageId":"84","endLine":10,"endColumn":53},{"ruleId":"81","severity":1,"message":"98","line":10,"column":65,"nodeType":"83","messageId":"84","endLine":10,"endColumn":76},{"ruleId":"91","severity":1,"message":"92","line":49,"column":17,"nodeType":"89","endLine":49,"endColumn":29},{"ruleId":"81","severity":1,"message":"99","line":1,"column":29,"nodeType":"83","messageId":"84","endLine":1,"endColumn":37},{"ruleId":"81","severity":1,"message":"100","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":19},{"ruleId":"81","severity":1,"message":"101","line":8,"column":13,"nodeType":"83","messageId":"84","endLine":8,"endColumn":21},{"ruleId":"81","severity":1,"message":"102","line":8,"column":36,"nodeType":"83","messageId":"84","endLine":8,"endColumn":48},{"ruleId":"81","severity":1,"message":"86","line":9,"column":13,"nodeType":"83","messageId":"84","endLine":9,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":34,"column":17,"nodeType":"89","endLine":34,"endColumn":121},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'quantity' is assigned a value but never used.","'wallet' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'selectBank' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setCountry' is assigned a value but never used.","'setWallet' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","'useState' is defined but never used.","'randomToken' is defined but never used.","'newToken' is assigned a value but never used.","'sellQuantity' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]